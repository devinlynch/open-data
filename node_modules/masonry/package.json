{
  "name": "masonry",
  "description": "Templating middleware for embedded javascript templates.",
  "keywords": [
    "template",
    "templating",
    "ejs",
    "middleware",
    "express",
    "connect"
  ],
  "version": "0.0.2",
  "author": {
    "name": "Bradley Griffiths",
    "email": "bradley.griffiths@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/bradleyg/masonry.git"
  },
  "scripts": {
    "test": "make test"
  },
  "main": "./index.js",
  "dependencies": {
    "ejs": "0.7.1"
  },
  "devDependencies": {
    "mocha": "*",
    "should": "*",
    "request": "*",
    "express": "*"
  },
  "engines": {
    "node": ">= 0.6.0"
  },
  "readme": "###Masonry - Templating middleware for embedded javascript templates.   \nInstall: ```npm install masonry```\n***\n###masonry(directory):  \nPass a directory of templates. Masonry will read all of the template files into memory.\n###res.render('template.ejs', data)  \nMethod added by the middleware. Renders a template. If a third parameter (callback) is provided the data will be returned rather than sent to the browser. The first param will be an error object, the second will be the rendered html.\n\n```\nvar app = require('express').createServer()\nvar masonry = require('masonry')\n\napp.use(masonry(__dirname + '/templates'))\n\napp.get('/:user', function(req, res) {\n  res.render('index.ejs', {user: req.params.user})\n})\n\napp.get('/return/:user', function(req, res) {\n  res.render('index.ejs', {user: req.params.user}, function(err, html){\n    if(err) throw new Error(err)\n    res.end(html)\n  })\n})\n\napp.listen(3000)\n```\n###Deps:\nEJS documentation: [https://github.com/visionmedia/ejs](https://github.com/visionmedia/ejs)  \n***\n###Examples: \n[View the examples](https://github.com/bradleyg/masonry/blob/master/example/app.js)  \n***\n###Tests  \n```\nnpm test\n```  \n\n[![Build Status](https://secure.travis-ci.org/bradleyg/masonry.png)](http://travis-ci.org/bradleyg/masonry)",
  "readmeFilename": "readme.md",
  "_id": "masonry@0.0.2",
  "dist": {
    "shasum": "407d2351318cb958d466a89c8e3eaf0dfc48472b"
  },
  "_from": "masonry@",
  "_resolved": "https://registry.npmjs.org/masonry/-/masonry-0.0.2.tgz"
}
